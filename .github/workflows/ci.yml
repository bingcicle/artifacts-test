name: Test toolchain compatibility (Latest)

on:
  push

env:
  INCOMPATIBLE_DIR: ./incompatible-versions
  LATEST_CHANNEL_DIR: ./channel-fuel-latest.toml.d/

jobs:
      - name: Create success artifact
        if: ${{ success() }}
        run: touch compatible-forc-${{ matrix.job.forc-version }}@fuel-core-${{ matrix.job.fuel-core-version }}

      - name: Upload success artifact
        if: ${{ success() }}
        id: upload-success-artifact
        uses: actions/upload-artifact@v3
        with:
          name: compatible-forc-${{ matrix.job.forc-version }}@fuel-core-${{ matrix.job.fuel-core-version }}
          path: compatible-forc-${{ matrix.job.forc-version }}@fuel-core-${{ matrix.job.fuel-core-version }}

  # index-versions: This job will process the artifacts above if testing is not skipped and upload
  # incompatible versions and/or publish a new channel-fuel-latest.toml to gh-pages.
  index-versions:
    name: Index versions compatibilities
    needs: test-toolchain-compatibility
    if: needs.test-toolchain-compatibility.result != 'skipped'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: versions

      # Here, we decide which versions to mark as compatible or incompatible.
      # Compatible: the uploaded artifact starting with the name 'compatible*' and is at the top when sorted.
      # We only care about the latest version set that passed tests here.
      #
      # Incompatible: all the uploaded artifacts that has 'incompatible' in file names, followed by their versions.
      # Here we care about all versions tagged as incompatible, and they're uploaded inside the incompatible-versions
      # directory within the `gh-pages` branch.
      - name: Prepare compatible and incompatible versions
        id: prep-versions
        working-directory: versions
        run: |
            ls
            COMPATIBLE_VERSIONS=$(ls compatible* -1 | sort -rV | head -n 1)
            echo "LATEST_COMPATIBLE_FORC=$(echo $COMPATIBLE_VERSIONS | cut -d '@' -f1 | cut -d '-' -f3-)" >> $GITHUB_ENV
            echo "LATEST_COMPATIBLE_FUEL_CORE=$(echo $COMPATIBLE_VERSIONS | cut -d '@' -f2 | cut -d '-' -f3)" >> $GITHUB_ENV

            INCOMPATIBLE_VERSIONS=$(ls | grep 'incompatible' | cut -d '-' -f2-)
            mkdir -p ${{ env.INCOMPATIBLE_DIR }}
            for version in $INCOMPATIBLE_VERSIONS; do
              touch ${{ env.INCOMPATIBLE_DIR }}/$version
            done

      # Run index-versions.sh here which generates the channel TOML file with download links and hashes for forc and fuel-core.
      - name: Prepare channel with compatible versions
        if: ${{ env.LATEST_COMPATIBLE_FORC && env.LATEST_COMPATIBLE_FUEL_CORE }}
        run: |
            touch channel-fuel-latest.toml
            mkdir -p ${{ env.LATEST_CHANNEL_DIR }}
            ./.github/workflows/scripts/index-versions.sh ${{ env.LATEST_COMPATIBLE_FORC }} ${{ env.LATEST_COMPATIBLE_FUEL_CORE }}
            cp channel-fuel-latest.toml ${{ env.LATEST_CHANNEL_DIR }}

      - name: Deploy latest channel
        if: ${{ env.LATEST_COMPATIBLE_FORC && env.LATEST_COMPATIBLE_FUEL_CORE }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.LATEST_CHANNEL_DIR }}
          keep_files: true
          destination_dir: ./

      - name: Deploy incompatible versions
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: versions/incompatible-versions
          keep_files: true
          destination_dir: ${{ env.INCOMPATIBLE_DIR }}
